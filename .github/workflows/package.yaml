name: Package Onelens-Agent Helm Chart

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  validate-and-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed to access previous commits

      - name: Install yq for YAML manipulation
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.3

      - name: Check if dependency version changed but chart version not updated
        run: |
          CHART_FILE="charts/onelens-agent/Chart.yaml"
          
          # Get the previous commit
          PREV_COMMIT=$(git rev-parse HEAD^)

          # Check if the Chart.yaml file was changed
          if git diff --quiet "$PREV_COMMIT" -- "$CHART_FILE"; then
            echo "No changes to $CHART_FILE detected. Skipping version check."
            exit 0
          fi

          # Extract current and previous values
          OLD_DEP_VERSIONS=$(git show "$PREV_COMMIT:$CHART_FILE" | yq '.dependencies[].version')
          NEW_DEP_VERSIONS=$(cat "$CHART_FILE" | yq '.dependencies[].version')

          OLD_CHART_VERSION=$(git show "$PREV_COMMIT:$CHART_FILE" | yq '.version')
          NEW_CHART_VERSION=$(cat "$CHART_FILE" | yq '.version')

          OLD_APP_VERSION=$(git show "$PREV_COMMIT:$CHART_FILE" | yq '.appVersion')
          NEW_APP_VERSION=$(cat "$CHART_FILE" | yq '.appVersion')

          if [ "$OLD_DEP_VERSIONS" != "$NEW_DEP_VERSIONS" ]; then
            echo "⚠️ Detected a change in dependency versions."
            if [ "$OLD_CHART_VERSION" = "$NEW_CHART_VERSION" ] || [ "$OLD_APP_VERSION" = "$NEW_APP_VERSION" ]; then
              echo "❌ Dependency version changed, but version or appVersion not updated."
              echo "Old Chart version: $OLD_CHART_VERSION"
              echo "New Chart version: $NEW_CHART_VERSION"
              echo "Old App version: $OLD_APP_VERSION"
              echo "New App version: $NEW_APP_VERSION"
              exit 1
            fi
          fi


      - name: All checks passed
        run: echo "✅ All checks passed. No packaging or publishing steps executed."
